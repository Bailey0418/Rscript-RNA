#1.多样本seurat.rds读入+合并
setwd("/```/")
library(Seurat)
D02P <- readRDS("/mnt/raid5/Projects/SingleCell/SDUTCM.DiabeticFeet/RawData/4/data/rds/YS2305041_DFU0002P/DFU0002P_seurat.rds")
D03P <- readRDS("/mnt/raid5/Projects/SingleCell/SDUTCM.DiabeticFeet/RawData/2/data/rds/YS2307059_DFU0003P/DFU0003P_seurat.rds")
D04P <- readRDS("/mnt/raid5/Projects/SingleCell/SDUTCM.DiabeticFeet/RawData/2/data/rds/YS2307059_DFU0004P/DFU0004P_seurat.rds")
D05P <- readRDS("/mnt/raid5/Projects/SingleCell/SDUTCM.DiabeticFeet/RawData/2/data/rds/YS2307059_DFU0005P/DFU0005P_seurat.rds")
D06P <- readRDS("/mnt/raid5/Projects/SingleCell/SDUTCM.DiabeticFeet/RawData/2/data/rds/YS2307059_DFU0006P/DFU0006P_seurat.rds")
ND04P <- readRDS("/mnt/raid5/Projects/SingleCell/SDUTCM.DiabeticFeet/RawData/1/data/rds/YS2309047_NNDFU0004P/NNDFU0004P_seurat.rds")
ND05P <- readRDS("/mnt/raid5/Projects/SingleCell/SDUTCM.DiabeticFeet/RawData/1/data/rds/YS2309047_NNDFU0005P/NNDFU0005P_seurat.rds")
ND13P <- readRDS("/mnt/raid5/Projects/SingleCell/SDUTCM.DiabeticFeet/RawData/1/data/rds/2310120_NNDFU0013p/NNDFU0013p_seurat.rds")
ND14P <- readRDS("/mnt/raid5/Projects/SingleCell/SDUTCM.DiabeticFeet/RawData/6/data/rds/2311282_NNDFU0014P/NNDFU0014P_seurat.rds")
tissue <- merge(D02P,y = c(D03P,D04P,D05P,D06P,ND04P,ND05P,ND13P,ND14P),
                 add.cell.ids = c("D02P","D03P","D04P","D05P","D06P","ND04P","ND05P","ND13P","ND14P"),
                 project = "PBMC56K",merge.data = TRUE)
tissue$sample <- sapply(X = strsplit(colnames(pbmc.P), split = "_"), FUN = "[", 1)
dim(tissue)
table(tissue@meta.data$sample)

#2.过滤细胞
library(ggplot2)
tissue[["percent.mt"]] <- PercentageFeatureSet(tissue, pattern = "^MT-")
tissue$log10GenesPerUMI <- log10(tissue$nFeature_RNA)/log10(tissue$nCount_RNA)
tissue <- subset(tissue,subset = nFeature_RNA > 200&nFeature_RNA < 6000&percent.mt < 10&log10GenesPerUMI > 0.8)
plot1 <- VlnPlot(tissue, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3,group.by = "orig.ident")
ggsave("filter_cell_vlnplot.pdf", plot = plot1, width = 10, height = 10)

plot1 <- FeatureScatter(tissue, feature1 = "nCount_RNA", feature2 = "percent.mt",group.by = "orig.ident")
plot2 <- FeatureScatter(tissue, feature1 = "nCount_RNA", feature2 = "nFeature_RNA",group.by = "orig.ident")
plot3 <- plot1 + plot2
ggsave("filter_cell_FeatureScatter.pdf", plot = plot3, width = 20, height = 10)

#3.数据标准化
tissue <- NormalizeData(tissue, normalization.method = "LogNormalize", scale.factor = 10000)
tissue <- FindVariableFeatures(tissue, selection.method = "vst", nfeatures = 2000)
top10 <- head(VariableFeatures(tissue), 10)
plot1 <- VariableFeaturePlot(tissue)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
plot3  <- plot1 + plot2
ggsave("Normalize_VariableFeaturePlot.pdf", plot = plot3, width = 20, height = 10)

all.genes <- rownames(tissue)
tissue <- ScaleData(tissue, features = all.genes)
tissue <- RunPCA(tissue, features = VariableFeatures(object = tissue))#求批次需要PCA结果
plot4 <- VizDimLoadings(tissue, dims = 1:2, reduction = "pca")
ggsave("RunPCA_VizDimLoadings.pdf", plot = plot4, width = 20,height = 10)
plot5 <- DimPlot(tissue, reduction = "pca", group.by = "orig.ident")
ggsave("RunPCA_DimPlot.pdf", plot = plot5, width = 10,height = 10)
plot6 <- ElbowPlot(tissue)
ggsave("RunPCA_ElbowPlot.pdf", plot = plot6, width = 10,height = 10)

tissue <- FindNeighbors(tissue, dims = 1:30)#一般都取1：30
tissue <- FindClusters(tissue, resolution = 0.5)#resolution可更改
head(Idents(tissue), 5)
tissue <- RunUMAP(tissue, dims = 1:30)
plot7 <- DimPlot(tissue, reduction = "umap", label = TRUE, repel = TRUE)#可切换为tsne图
ggsave("RunUMAP_DimPlot.pdf", plot = plot7, width = 10, height = 10)#切换为tsne图之后记得改文件名
plot8 <- DimPlot(tissue, reduction = "umap", group.by = "sample")#同上一步
ggsave("RunUMAP_sample_DimPlot.pdf", plot = plot8, width = 10, height = 10)

#4.去批次效应
library(harmony)
tissue <- RunHarmony(tissue, reduction = "pca", group.by.vars = "sample", reduction.save = "harmony")
tissue <- RunUMAP(tissue, reduction = "harmony", dims = 1:30, reduction.name = "umap")
tissue <- FindNeighbors(tissue, reduction = "harmony", dims = 1:30)
tissue <- FindClusters(tissue, resolution = 0.5)
plot1 <- DimPlot(tissue, reduction = "umap",group.by = "sample", label = F,repel = TRUE)
plot2 <- DimPlot(tissue, reduction = "umap", label = T,repel = TRUE)
plot3 <- plot1 + plot2
ggsave("RunHarmony_umap_DimPlot.pdf", plot = plot3, width = 20, height = 10)

#5.确定分辨率,数据降维
library(clustree)
library(patchwork)
seq <- seq(0.1,1,by = 0.1)
for(res in seq){
  tissue <- FindClusters(tissue, resolution = res)
}
p1 <- clustree(tissue,prefix = "RNA_snn_res.") + coord_flip()
ggsave("all_clusters.pdf", plot = p1, width = 30, height = 10)#图片中观察从右开始第一次交织的箭头的右面的点为分辨率
tissue <- FindClusters(tissue, resolution = 0.2)
#只保留指定分辨率
tissue@meta.data <- tissue@meta.data[, c(1:6,8,10)]

#6.计算marker基因并绘制热图
markers <- FindAllMarkers(tissue, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)
write.csv(markers, "all_markers.csv")
library(dplyr)
top100 <- markers %>% group_by(cluster) %>% top_n(n = 100, wt = avg_log2FC)
write.csv(top100,"cluster_top100_marker.csv")
saveRDS(tissue,"scRNA_wt.rds")

#7.细胞注释（一般使用cellmarker注释，即手动注释后整理输入注释信息）
new.cluster.ids <- c("Monocyte", "Monocyte","T cell", "T cell","T cell","T cell","Monocyte","B cell","Monocyte","Monocyte","T cell","Monocyte","T cell",
                     "Basophil","Monocyte","Megakaryocyte","T cell","B cell","Monocyte","T cell","T cell","T cell","Neutrophil","B cell")#按顺序依次输入
names(new.cluster.ids) <- levels(tissue)
tissue <- RenameIdents(tissue, new.cluster.ids)
plot1 <- DimPlot(tissue, reduction = "umap", label = TRUE)
ggsave("celltype_umap_DimPlot.pdf", plot = plot1, width = 10, height = 10)

 #绘制top基因热图(计算均值后再画图)
gene_cell_exp <- AverageExpression(tissue, features = top20$gene, group.by = 'celltype', slot = 'data') 
gene_cell_exp <- as.data.frame(gene_cell_exp$RNA)
library(ComplexHeatmap)
df <- data.frame(colnames(gene_cell_exp))#顶部细胞类型注释
colnames(df) <- 'class'
top_anno = HeatmapAnnotation(df = df, border = T, show_annotation_name = F, gp = gpar(col = 'black'),
                             col = list(class = c("Adipocyte" = "#D6221E", "Endothelial cell" = "#3678AD", "Myeloid cell" = "#4DA74A", "Smooth muscle cell" = "#8F4B99", "T cell" = "#EF7C1B", 
                                                  "Epithelial cell" = "#F0EB4C","Cycling cell" = "#A15428", "Mast cell" = "#E57FB0", "B cell" = "#999899", 
                                                  "Melanocytes and Schwann cell" = "#D84794")))
marker_exp <- t(scale(t(gene_cell_exp),scale = T,center = T))
min_val <- min(marker_exp, na.rm = TRUE)
max_val <- max(marker_exp, na.rm = TRUE)
col_cluster <- setNames(c(rep("#D6221E",5), rep("#3678AD",5), rep("#4DA74A",5), rep("#8F4B99",5), rep("#EF7C1B",5), 
                          rep("#F0EB4C",5), rep("#A15428",5), rep("#E57FB0",5), rep("#999899",5), rep("#D84794",5)),rownames(marker_exp))#与上面的标签一致
row_info = rowAnnotation(foo = anno_text(rownames(marker_exp), location = 0, just = "left",gp = gpar(fill = col_cluster, col = "black"),
                              width = max_text_width(rownames(marker_exp))*1.2))
library(circlize)
col_fun = colorRamp2(c(min_val, 0, max_val), c("lightblue", "white", "lightcoral"))
plot2 <- Heatmap(marker_exp, cluster_rows = F, cluster_columns = F, show_column_names = F, show_row_names = T, column_title = NULL, heatmap_legend_param = list(title=' '),
                 col = col_fun, border = 'black', rect_gp = gpar(col = "black", lwd = 1), row_names_gp = gpar(fontsize = 10),
                 column_names_gp = gpar(fontsize = 10), top_annotation = top_anno)+row_info
pdf("top_gene_heatmap.pdf", width = 10, height = 10)
draw(plot2)
dev.off()
#绘制细胞类型分组数据柱形图
tissue$celltype <- Idents(tissue)
cell_count <- tissue@meta.data %>% group_by(source, celltype) %>% summarise(count = n())  # 统计每个组合的数量
cell_count <- cell_count %>% group_by(source) %>% mutate(total = sum(count), proportion = count / total)  # 计算每个细胞类型的占比
plot2 <- ggplot(cell_count, aes(x = celltype, y = proportion, fill = source)) +  
                geom_bar(stat = "identity", position = "dodge") +  # 设置position = "dodge"实现分组柱形图
                scale_fill_manual(values = c("D" = "lightcoral", "N" = "lightblue")) +  # 手动设置颜色
                labs(title = "Cell Composition by Source (D vs N)", 
                x = "Cell Type", y = "Proportion", fill = "Source") +  # 设置标题和轴标签
                theme(axis.text.x = element_text(angle = 45, hjust = 1))  # 调整x轴标签角度
ggsave("celltype_number.pdf", plot = plot2, width = 5, height = 5)
 #选择基因进行展示
marker_sign <- c("CST3", 'FCER1A', 'FCN1', 'HLA-DPA1', 'IFIT2','ISG15', 'LYZ', 'MNDA', 'VCAN')
plot3 <- FeaturePlot(tissue, features = marker_sign)
ggsave("genes_FeaturePlot.pdf", plot = plot3, width = 10, height = 10)
saveRDS(tissue,"tissue.rds")
tissue_EC <- subset(tissue, idents = "Endothelial cell")
saveRDS(tissue_EC, "tissue_EC.rds")

#8.再次注释时查看每种marker方案的细胞数，选择较好的marker方案
tissue <- readRDS("tissue_EC.rds")
cellsub <- subset(tissue@meta.data, group=="D0")
disease <- subset(tissue, cells=rownames(cellsub))
disease_expr <- GetAssayData(disease, slot="data")
dim(disease_expr)#使用相同的方法可查看control的细胞分布
gene_expression <- disease_expr %>% .[c('KIT','FCER1A','TPSAB1','TPSB2','MS4A2','CPA3','CMA1','IL1RL1'),] %>% as.data.frame() %>% t()
gene_expression <- as.data.frame(gene_expression)
gene_expression_sel <- gene_expression[which(gene_expression$KIT > 0&gene_expression$FCER1A > 0&gene_expression$TPSAB1 > 0&gene_expression$TPSB2 > 0&gene_expression$MS4A2 > 0&gene_expression$CPA3 > 0&gene_expression$CMA1 > 0&gene_expression$IL1RL1 > 0),]
dim(gene_expression_sel)

 #确定marker方案后绘制dotplot图
library(scCustomize) # 需要Seurat版本4.3.0
library(RColorBrewer)
library(ComplexHeatmap)
a <- c('PECAM1','MCAM','CD34','CDH5','KDR','PROM1','PTPRC','CD14')
plot1 <- DotPlot(tissue,features =  a,assay='RNA')
ggsave("DotPlot.pdf", plot = plot1, width = 10, height = 10)
 #特定基因featureplot图绘制
plot2 <- FeaturePlot(tissue, features = "CD3D") 
ggsave("CD3D_FeaturePlot.pdf", plot = p2, width = 10, height = 10)

#9.subtype注释
new.cluster.ids <- c('EC','other','other','other','other','other','other','other','other',
                     'EC','ECFC','other','ECFC','EPC','EC')
names(new.cluster.ids) <- levels(tissue1)
tissue <- RenameIdents(tissue, new.cluster.ids)
saveRDS(tissue, "tissue_EC.rds")
tissue_3_ECs <- subset(tissue,idents = c('EPC','ECFC','EC'))
table(Idents(tissue_3_ECs))
saveRDS(tissue_3_ECs,"tissue_3ECs.rds")

#10.美化版tsne图绘制代码
Idents(tissue) <- tissue$RNA_snn_res.0.5
tissue <- RunTSNE(tissue, dims = 1:30,reduction.name = "tsne")
library(RColorBrewer)
cell_type_cols <- c(brewer.pal(9, "Set1"), 
                    "#FF34B3","#BC8F8F","#20B2AA","#00F5FF","#FFA500","#ADFF2F",
                    "#FF6A6A","#7FFFD4", "#AB82FF","#90EE90","#00CD00","#008B8B",
                    "#6495ED","#FFC1C1","#CD5C5C","#8B008B","#FF3030", "#7CFC00")  

plot1 <- DimPlot(tissue, label = T, reduction = "tsne", pt.size = 1, cols = cell_type_cols)+
  NoLegend()+labs(x = "TSNE1", y = "TSNE2",title = "Celltype") +
  theme(panel.border = element_rect(fill=NA,color="black", size=1, linetype="solid"),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank())
ggsave("cluster_tsne.pdf", plot = plot1, width = 10, height = 10)

#11.个性化分析-同种细胞类型在condition之间求差异基因并作图展示
#（1）筛选差异表达基因
library(Seurat)
tissue_HC <- as.Seurat(tissue_HC)#导入数据或生成数据
# 设置 group 为 ident（用于分组）
Idents(tissue_HC) <- "condition"

# 计算差异表达基因（cre vs wt）
deg_results <- FindMarkers(
  tissue_HC,
  ident.1 = "cre",  # 组1，实验组
  ident.2 = "wt",   # 组2，对照组
  logfc.threshold = 0.25,  # 只保留logFC > 0.25的基因
  min.pct = 0.1,          # 只考虑在至少10%细胞中表达的基因
  test.use = "wilcox"     # Wilcoxon rank-sum test
)
head(deg_results)
write.csv(deg_results, "DEG_cre_vs_wt.csv")
（2）差异基因做火山图（Volcano Plot）
library(ggplot2)

deg_results$gene <- rownames(deg_results)
deg_results$threshold <- ifelse(deg_results$p_val_adj < 0.05 & abs(deg_results$avg_log2FC) > 0.25, 
                                ifelse(deg_results$avg_log2FC > 0.25, "Up", "Down"), "Not Sig")

p1 <- ggplot(deg_results, aes(x = avg_log2FC, y = -log10(p_val_adj), color = threshold)) +
             geom_point(alpha = 0.6, size = 2) +
             scale_color_manual(values = c("Up" = "red", "Down" = "blue", "Not Sig" = "grey")) +
             theme_minimal() +
             labs(title = "Volcano Plot of DEGs", x = "log2 Fold Change", y = "-log10 Adjusted p-value")
ggsave(""Volcano Plot.pdf",plot = p1, width = 10, height = 10)
(2)差异基因做热图（Heatmap）
library(pheatmap)
# 获取差异基因的表达矩阵
expression_matrix <- GetAssayData(tissue_HC, assay = "RNA", slot = "data")[sig_genes, ]
# 提取 condition 信息并排序
condition_info <- data.frame(condition = tissue_HC$condition)
rownames(condition_info) <- colnames(expression_matrix)
# 根据 condition 排序细胞列
sorted_cells <- rownames(condition_info)[order(condition_info$condition)]
expression_matrix <- expression_matrix[, sorted_cells]
condition_info <- condition_info[sorted_cells, , drop = FALSE]
# 颜色映射
annotation_colors <- list(condition = c("cre" = "red", "wt" = "blue"))
# 限制表达值范围（clip 到 0-5）
expression_matrix[expression_matrix > 5] <- 5
expression_matrix[expression_matrix < 0] <- 0
# 自定义颜色梯度（黄色 -> 紫色）
color_palette <- colorRampPalette(c("white", "lightcoral"))(100)
# 绘制热图
p2 <- pheatmap(expression_matrix,
               annotation_col = condition_info,  # 按 condition 进行注释
               annotation_colors = annotation_colors,  # 自定义颜色
               cluster_rows = TRUE,  # 对基因进行聚类
               cluster_cols = FALSE,  # 细胞不聚类，保持 condition 顺序
               scale = "none",  # 不进行标准化，保持原始表达值
               show_colnames = FALSE,  # 不显示细胞名（可选）
               show_rownames = TRUE,   # 显示基因名
               breaks = seq(0, 5, length.out = 100),  # 限制表达值范围
               color = color_palette)  # 使用黄色到紫色的渐变色
ggsave("Heatmap_abs_log2FC_4.pdf",plot = p2, width = 10, height = 10)
(3)挑选差异基因做小提琴图
library(Seurat)
library(ggpubr)

# 生成基础小提琴图（不加点，方便美观）
p3 <- VlnPlot(
  tissue,
  features = gene,
  group.by = "condition",
  pt.size = 0,
  combine = FALSE  # 为每个基因分别生成 ggplot 对象，方便添加p值
)

# 添加p值（默认用 Wilcoxon 检验）
p3 <- lapply(p3, function(plot) {
  plot + stat_compare_means(method = "wilcox.test", label = "p.format")
})

# 合并图
library(patchwork)
p3 <- wrap_plots(p3, ncol = 3)
ggsave("Violin Plot.pdf",plot = p3, width = 15, height = 15)#记得改图片大小
