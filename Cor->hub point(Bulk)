#1.计算基因的共表达相关性
pcg_fpkm <- readRDS("F:/RCD/cancer/LUSC/cor/LUSC_geneset_fpkm.Rdata")
lnc_fpkm <- readRDS("F:/RCD/cancer/LUSC/cor/LUSC_rcd_lnc_fpkm.Rdata")
a1 <- as.matrix(lnc_fpkm)
a1 <- t(a1)
a2 <- as.matrix(pcg_fpkm)
a2 <- t(a2)
corresult<-data.frame(gene=character(0),lnc=character(0),
                      pair=character(0),R=numeric(0),
                      P=numeric(0))
g=1
for(i in 1:ncol(a1)){
  for (j in 1:ncol(a2)) {
    c1<-cor(as.numeric(a1[,i]),as.numeric(a2[,j]),method = "pearson")
    c2<-cor.test(as.numeric(a1[,i]),as.numeric(a2[,j]),method = "pearson")$p.value
    corresult<-rbind(corresult,data.frame(gene=colnames(a1)[i],lnc=colnames(a2)[j],
                                          pair="lnc-gene",R=c1,P=c2))
    g=g+1
    print(g)
  }
  saveRDS(corresult,file = "lnc_pcg_cor.Rdata")
}
p <- as.data.frame(corresult$P,romnames = rownames(corresult))
FDR <- p.adjust(p$`corresult$P`,method = "BH")
corresult$FDR <- FDR
corresult1 <-corresult[which(abs(corresult$R)>0.7&corresult$FDR<0.05),]
write.csv(corresult1,file = "LUSC_lnc_corresult7.csv")

#2.寻找共表达网络的hub节点
###构建网络
library(igraph)
ppi_network <- graph_from_data_frame(d = corresult1[, c("gene", "lnc")], directed = FALSE)
print(ppi_network)

# 计算度数中心性
degree_centrality <- degree(ppi_network, mode = "all")
# 将中心性指标添加到数据框
hub_genes <- data.frame(gene = names(degree_centrality), degree = degree_centrality)
# 按照度数中心性从大到小排序
hub_genes_sorted <- hub_genes[order(-hub_genes$degree), ]
# 查看前几个 hub 基因
head(hub_genes_sorted)

# 计算介数中心性
betweenness_centrality <- betweenness(ppi_network, directed = FALSE)
# 将介数中心性添加到数据框
hub_genes$betweenness <- betweenness_centrality
# 按照介数中心性从大到小排序
hub_genes_sorted_betweenness <- hub_genes[order(-hub_genes$betweenness), ]
# 查看前几个介数中心性高的基因
head(hub_genes_sorted_betweenness)

# 计算紧密中心性
closeness_centrality <- closeness(ppi_network, normalized = TRUE)
# 将紧密中心性添加到数据框
hub_genes$closeness <- closeness_centrality
# 按照紧密中心性从大到小排序
hub_genes_sorted_closeness <- hub_genes[order(-hub_genes$closeness), ]
# 查看前几个紧密中心性高的基因
head(hub_genes_sorted_closeness)
write.csv(hub_genes_sorted_closeness,"hub_genes_sorted_closeness.csv")
